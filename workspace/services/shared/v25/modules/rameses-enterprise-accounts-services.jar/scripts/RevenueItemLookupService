import com.rameses.annotations.*;
import com.rameses.util.*;
import java.rmi.server.*;
import com.rameses.common.*
import com.rameses.services.extended.*

class RevenueItemLookupService  {

	@PersistenceContext("main")
	def em;

	@Env
	def env;
	
	@ProxyMethod
	public def getColumns( def o ) {
		return[
			[name:'code', caption:'Item Code', width:100, resizable:false ],
			[name:'title', caption:'Item Title' ],
			[name:'fund.code', caption:'Fund Code', width:50 ],
			[name:'fund.title', caption:'Fund Title' ],
		];
	}
	
	/**
	* possible txn type values:
	* cashreceipt : during online cash receipt.
    * cashreceipt-extended : if there is special handling of cash receipts
    *    in cashreceipt-exteneded. you need to pass itemids; 	
	*/
	@ProxyMethod
	public def getList( Map m ) {
		if(m.searchtext == null ) m.searchtext = "";
		m.code = m.searchtext.trim() + "%";
		m.title = m.searchtext.trim() + "%";
		
		if( !m.collectorid) {
			m.collectorid = env.USERID;
		}	
		
		String sqlName = "revenueitem:getLookup";
		def vars = [:];	
		if(m.txntype == "cashreceipt" ) {
			sqlName = "revenueitem:getLookupBasicCashReceipt";
		}
		else if(m.txntype == "cashreceipt-extended") {
			sqlName = "revenueitem:getLookupBasicCashReceipt";
			if( !m.itemids ) 
				throw new Exception("RevenueItemLookupService.error. You need to pass itemids parameters");
			vars = [filter: "'" + m.itemids.join("','") + "'" ];	
		}
		def qry = em.sqlContext.createNamedQuery(sqlName).setParameters(m).setVars(vars).setMaxResults(50);
		qry.setPagingKeys("r.objid")
		return qry.resultList;	
	}
	
}
