import com.rameses.annotations.*;
import com.rameses.util.*;

class BasicAuthenticationServiceImpl
{
	@Service('DateService')
	def dateSvc;

	@Service('AdminUserService')
	def svc;

	@Service('Var')
	def var;

	@ProxyMethod(local=true) 
	public Map authenticate( username, password ) 
	{
		def info = svc.authenticate(username, password);

		info.pwdlogincount = toInt(info.pwdlogincount); 

		def pwd_change_login_count = toInt(var.pwd_change_login_count);
		if (pwd_change_login_count > 0) 
		{
			svc.incrementLoginCount(username, info.pwdlogincount);
			info.pwdlogincount++;
		}

		def CHANGE_PWD_ON_LOGIN = false; 
		if (pwd_change_login_count > 0 && info.pwdlogincount > pwd_change_login_count) 
			CHANGE_PWD_ON_LOGIN = true;
		else if (!info.pwdexpirydate || dateSvc.serverDate >= info.pwdexpirydate) 
			CHANGE_PWD_ON_LOGIN = true; 

		def result = [:];
		result.CHANGE_PWD_ON_LOGIN = CHANGE_PWD_ON_LOGIN;
		return result;
	} 
	
	private def toInt( value ) {
		try {
			return value.toInteger(); 
		} catch(e) {
			return 0; 
		}
	}
}