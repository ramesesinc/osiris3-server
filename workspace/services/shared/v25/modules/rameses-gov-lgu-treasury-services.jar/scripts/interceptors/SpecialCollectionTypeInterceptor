import com.rameses.annotations.*;
import com.rameses.util.*;
import java.rmi.server.*;

class SpecialCollectionTypeInterceptor 
{
	@Service('SpecialCollectionTypeService')
	def svc 

	@Before(pattern="CollectionTypeService.removeEntity", eval="args[0].handler.matches('burial|lco|lct|marriage')")
	public def deleteSpecialCollectionType(def evt) { 
		svc.delete(evt.args[0].specialacctobj)
	}
	
	@After(pattern="CollectionTypeService.open", eval="result.handler.matches('burial|lco|lct|marriage')")
	public def openSpecialCollectionType(def evt) { 
		def ct = evt.result; 
		def setting = svc.open(ct.objid);
		if (setting){
			ct.specialacctobj = setting.objid;
			ct.item = setting.item;
			ct.amount = setting.amount;
		}
	}

	@After(pattern="CollectionTypeService.create", eval="result.handler.matches('burial|lco|lct|marriage')")
	public def createSpecialCollectionType(def evt) { 
		def ct = evt.result;
		ct.specialacctobj = 'CI' + new UID();
		svc.create( ct );
	}

	@After(pattern="CollectionTypeService.update", eval="result.handler.matches('burial|lco|lct|marriage')")
	public def updateSpecialCollectionType(def evt) { 
		svc.update(evt.result);
	}
	
	@After(pattern="CollectionTypeService.create", eval="result.handler.matches('slaughter')")
	public def createSpecialCollectionTypeSlaughter(def evt) { 
		def ct = evt.result; 
		ct.items?.each {
			it.putAll( createSpecialAcct( ct.objid, it.item ) );
		}
	}
	
	def createSpecialAcct( collectiontypeid, item ) {
		def sa = [
			specialacctobj : 'CI' + new UID(),
			objid  : collectiontypeid,
			item   : item,
			amount : 0.00,
			state  : 'SAVED'
		];
		
		svc.create( sa );
		return sa;
	}
	
	@After(pattern="CollectionTypeService.update", eval="result.handler.matches('slaughter')")
	public def updateSpecialCollectionTypeSlaughter(def evt) { 
		def ct = evt.result; 
		ct.items?.each { itm ->
			if( itm.state == 'SAVED' )
				svc.update( itm );
			else 
				itm.putAll( createSpecialAcct( ct.objid, itm.item ) );
		}
		
		ct.itemsToDelete?.each {
			svc.delete( it.specialacctobj );
		}
	}
	
	@After(pattern="CollectionTypeService.open", eval="result.handler.matches('slaughter')")
	public def openSpecialCollectionTypeSlaughter(def evt) { 
		def ct = evt.result; 
		def settings = svc.openList(ct.objid);
		
		def items = [];
		settings?.each {
			items << [specialacctobj:it.objid, item:it.item, amount:it.amount, state:'SAVED'];
		}
		
		if( items ) ct.items = items;
	}
	
	@Before(pattern="CollectionTypeService.removeEntity", eval="args[0].handler.matches('slaughter')")
	public def deleteSpecialCollectionTypeSlaughter(def evt) {
		def ct = evt.args[0]; 
		ct.items?.each {
			svc.delete( it.specialacctobj );
		}
	}
}
