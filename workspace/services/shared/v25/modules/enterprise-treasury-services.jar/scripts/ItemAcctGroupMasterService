import com.rameses.annotations.*
import com.rameses.common.*

class ItemAcctGroupMasterService {
	@PersistenceContext('main')
	def em
	
	def SCHEMA_NAME = 'itemacctgroup'
	def STATE_DRAFT = 'DRAFT'
	def STATE_APPROVED = 'APPROVED'
	
	@ProxyMethod
	public def create( entity ) {
		em.create(SCHEMA_NAME, entity)
		return entity
	}
	
	@ProxyMethod
	public def update( entity ) {
		def old = open(entity)
		
		if( old.state == STATE_APPROVED)
		throw new Exception('Income Account Group has already been approved.')
		
		em.update( SCHEMA_NAME, entity )
		return entity
	}
	
	@ProxyMethod
	public def open( entity ) {
		entity = em.read(SCHEMA_NAME, entity)
		
		if( !entity ) throw new Exception('Income Account Group does not exists or has already been deleted.')
		return entity
	}
	
	@ProxyMethod
	public def approve( entity ) {
		def old = open(entity)
		
		if( old.state == STATE_APPROVED )
		throw new Exception('Income Account Group has already been approved.')
		
		entity.state = STATE_APPROVED
		return update( entity )
	}
	
	@ProxyMethod
	public void delete( entity ) {
		em.delete(SCHEMA_NAME, entity)
	}
	
	void checkReference( group ) {
		def ref = em.sqlContext.createNamedQuery('incomeacctgroup:getReference')
						.setParameter('groupid', group.objid ).singleResult 
		if( ref ) throw new Exception(group.name + ' is currently referenced by Income Account No. ' + ref.accttitle + '.')
	}
}