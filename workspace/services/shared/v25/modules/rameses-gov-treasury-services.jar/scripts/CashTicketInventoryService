import com.rameses.annotations.*;
import com.rameses.util.*;
import java.rmi.server.*;
import com.rameses.services.extended.*;

class CashTicketInventoryService {

	@ActiveDB("cashticket_inventory")
	def cashTicketInventory;

	@Service("DateService")
	def dateSvc;

	@Env
	def env;

	private def initDetail(def o) {
		def m = [:];
		m.objid = "CTINVTRYDETAIL"+ new UID();
		m.refid = o.refid;
		m.refno = o.refno;
		m.reftype = o.reftype;
		m.refdate = o.refdate;
		m.txndate = dateSvc.serverDate;
		m.qtyin = 0;
		m.qtyout = 0;
		m.qtycancelled = 0;
		m.qtyending = 0;
		return m;
	}


	@ProxyMethod
	public def postDebit(def o)	{
		//if a startstub is specified, create new head, else find resp. center for the head
		def head = null;
		if(o.starstub) {
			head = cashTicketInventory.findControlByResponsibilityCenter([afid:o.afid, respcenterid: o.respcenter.objid]);
		}
		if(head==null) {
			head = [:];
			head.objid = "CTINVTRY"+new UID();
			head.afid = o.afid;
			head.qtyin = o.qty;
			head.qtyout = 0;
			head.qtycancelled = 0;
			head.qtybalance = o.qty;
			head.currentlineno = 1;
			head.txntype = o.txntype;
			head.respcenter = o.respcenter;
			head.startstub = 0;
			head.endstub = 0;
			head.currentstub = 0;
			if(o.startstub) {
				head.startstub = o.startstub;
				head.endstub = o.endstub;
				head.currentstub = o.startstub;
			}	
			cashTicketInventory.save( head );
		}
		else {
			head.qtyin+=o.qty;
			head.qtybalance+= o.qty;
			head.currentlineno += 1;
			cashTicketInventory.update(head);
		}
		def detail = initDetail(o);
		detail.controlid = head.objid;
		detail.lineno = head.currentlineno;
		detail.txntype = o.txntype;
		detail.qtyin = o.qty;
		detail.qtyending = head.qtybalance;
		detail.remarks = o.remarks;
		cashTicketInventory.create( detail, "detail" );
		return head;
	}


	@ProxyMethod
	public def postCredit(def o)	{
		def head = cashTicketInventory.read( [objid: o.controlid]);
		if(head.currentstub!= o.startstub)
			throw new Exception("Data may have changed for "  + o.afid + ". Please run process again");

		head.qtyout = o.qty;
		head.qtybalance -= o.qty;
		if(head.startstub) head.currentstub = o.endstub + 1;
		head.currentlineno+=1;
		cashTicketInventory.update( head );

		def detail = initDetail(o);
		detail.controlid = head.objid;
		detail.lineno = head.currentlineno;
		detail.txntype = o.txntype;
		detail.qtyout = o.qty;
		detail.qtyending = head.qtybalance;
		detail.remarks = o.remarks;
		cashTicketInventory.create( detail, "detail" );
	}




}

