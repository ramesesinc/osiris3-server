import com.rameses.annotations.*;
import com.rameses.util.*;
import java.rmi.server.*;
import com.rameses.common.*
import com.rameses.services.extended.*

/** This posts transaction to the af accountability */
class CashTicketInventoryInterceptor {

	@Service("CashTicketInventoryService")
	def cashTicketSvc;

	@ActiveDB("stockitem")
	def stockitem;

	@After(pattern="StockReceiptService.create", eval="#{args[0].itemclass == 'AF'}")
	public void postCashTicketReceipt( def evt ) { 
		def o = evt.result;
		def list = o.items.findAll{ it.qtyreceived > 0 && it.item.type=='CASHTICKET' && it.items!=null };
		list.each { z->
			int unitQty = stockitem.findUnitQty( [itemid: z.item.objid, unit: z.unit] )?.qty;	
			if(!unitQty)
				throw new Exception("No unit qty found for " + z.item.objid );
			z.items.each {
				def m = [:];		
				m.refid = o.objid;
				m.reftype = "stockreceipt";	
				m.refno = o.receiptno;
				m.refdate = o.dtfiled;
				m.afid = z.item.objid;
				m.qty= it.qty*unitQty;
				m.itemclass = z.item.itemclass;
				m.itemtype = z.item.type;
				m.startstub = it.startstub;
				m.endstub = it.endstub;
				m.respcenter = [objid:'AFO', name:'AFO', type:'AFO'];
				m.txntype = "RECEIPT";
				m.remarks = "PURCHASE RECEIPT"
				cashTicketSvc.postDebit(m);
			}	
		}
	}
	
}