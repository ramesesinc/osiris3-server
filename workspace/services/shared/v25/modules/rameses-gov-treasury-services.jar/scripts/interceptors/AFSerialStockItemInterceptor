import com.rameses.annotations.*;
import com.rameses.util.*;
import java.rmi.server.*;
import com.rameses.common.*
import com.rameses.services.extended.*

/**
* This controls all transactions in a cashbook entry
*/
class AFSerialStockItemInterceptor {

	@ActiveDB("afserial")
	def em;

	@After(pattern="StockItemService.create", eval="#{args[0].type == 'AFSERIAL'}")
	public void createAFSerial( def evt ) { 
		throw new Exception("Create not supported. This is a system defined entry");
	}
	
	@After(pattern="StockItemService.update", eval="#{args[0].type == 'AFSERIAL'}")
	public void updateAFSerial( def evt ) { 
		throw new Exception("Create not supported. This is a system defined entry");
	}

	@After(pattern="StockItemService.open", eval="#{args[0].type == 'AFSERIAL'}")
	public void openAFSerial( def evt ) { 
		def z = em.read( evt.args[0] );	
		evt.result.putAll( z );
		
	}

	@After(pattern="StockItemService.removeEntity", eval="#{args[0].type == 'AFSERIAL'}")
	public void removeAFSerial( def evt ) { 
		throw new Exception("Create not supported. This is a system defined entry");
	}

	
}
