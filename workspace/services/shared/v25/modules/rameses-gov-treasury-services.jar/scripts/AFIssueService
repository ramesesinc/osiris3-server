import com.rameses.annotations.*;
import com.rameses.util.*;
import java.rmi.server.*;
import com.rameses.services.extended.*;

class AFIssueService extends AbstractCrudService {

	@PersistenceContext("main")
	def em;

	@Env 
	def env;
	
	@Service("SequenceService") 
	def seqSvc;

	@Service("DateService") 
	def dateSvc;

	@Service("AFStockPostService")
	def afStockPostSvc;
	
	@Service("AFControlPostService")
	def afControlSvc;
	
	String schemaName = "afissue";

	void beforeCreate( def o ) {
		if(!o.items)
			throw new Exception("Please add at least one item");
		o.user = [objid:env.USERID, name:env.USER, title:'JOB TITLE'];
		o.issueno = "AFISSUE" + seqSvc.getNextFormattedSeries("AFISSUE");
		o.risid = o.ris.objid;
		o.txntype = o.ris.txntype;
		o.txndate = dateSvc.serverDate;
		o.state = "CLOSED";
		
		o.ris.refid = o.objid;		
		o.ris.refno = o.issueno;
		o.ris.reftype = "afissue";
		o.ris.state = "CLOSED";
		
		o.issueto = o.ris.requester;
		o.issueto.jobtitle = o.ris.requester.title;
	}
	
	void afterCreate( def o ) {
		o.items.each{
			it.objid = "AFISI" + new UID();
			it.parentid = o.objid;
			em.create("afissue:item", it);
		}
		em.update("ris", o.ris);
		o.ris.items.each {
			em.update("ris:item", it);
		}	
		post( o );
	}
	
	
	/***
	* This method posts to the stock control and issue to collector
	*/
	@ProxyMethod
	public def post( o ) {
		for( it in o.items) {
			it.refid = o.issueno;
			it.reftype = "AF:ISSUE";
			it.refdate = o.txndate;
			it.remarks = 'issued to ' + o.issueto.name;
			
			//post to af stock control
			def c = afStockPostSvc.postIssue( it );
			
			//coming from client
			c.prefix = it.prefix;
			c.startstub = it.startstub;
			c.suffix = it.suffix;
			c.issueto = o.issueto;
			c.unitqty = it.unitqty;	
			c.af = it.af;
			
			//post each item to af control
			afControlSvc.postCreate( c );
		}
	}
	
	
	
	//on opening.
	void afterOpen(def o) {
		o.items = em.sqlContext.createNamedQuery("afissue:getItems").setParameters(o).resultList;
	}
	
	
}
