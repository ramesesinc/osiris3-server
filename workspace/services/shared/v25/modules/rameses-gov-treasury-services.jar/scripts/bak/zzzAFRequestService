import com.rameses.annotations.*;
import com.rameses.util.*;
import java.rmi.server.*;
import com.rameses.services.extended.*;

class AFRequestService extends AbstractCrudService {

	@PersistenceContext("main")
	def em;

	@Service("DateService")
	def dateSvc;
	
	@Service("SequenceService")
	def seqSvc;

	@Env
	def env;
	
	String schemaName = "afrequest"
	
	public void beforeCreate(def o) {
		o.objid = "RIV"+seqSvc.getNextFormattedSeries("RIV");
		o.txndate = dateSvc.serverDate;
		o.createdby = env.USER;
		o.state = 'DRAFT';
	}
	
	public void afterCreate(def o) {
		o.items.each {
			it.objid = "AFRQI"+new UID();
			it.reqid = o.objid;
			it.qtyreceived = 0;
			em.create( "afrequest:item", it );
		}
	}

	public void afterOpen(def o) {
		o.items = em.sqlContext.createNamedQuery("afrequest:getItems").setParameters(o).resultList;
		/*
		if( x.receiptid ) {
			def p = [objid:x.receiptid];
			def r = em.read( "afreceipt", p );
			r.items = em.sqlContext.createNamedQuery("afreceipt:getItems").setParameters(p).resultList;
			x.receipt = r;	
		}
		*/
	}
	
}
