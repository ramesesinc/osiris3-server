import com.rameses.annotations.*;
import com.rameses.util.*;
import java.rmi.server.*;
import com.rameses.common.*
import com.rameses.services.extended.*
import java.text.DecimalFormat;

class LiquidationReportService  {

	@PersistenceContext("main")
	def em; 

	@Service("NumberService")
	def numSvc;

	def decformat = new DecimalFormat("#,##0.00");

	@ProxyMethod 
	def getRCDReportData( params ) {
		def liquidation = em.sqlContext.createNamedQuery('liquidationreport:getLiquidationInfo').setParameters(params ).singleResult
		if(! liquidation ) throw new Exception("Could not open liquidation with objid " + params.liquidationid )

		liquidation.remittances = em.sqlContext.createNamedQuery('liquidationreport:getRCDRemittances').setParameters(params ).resultList
		liquidation.collectionsummaries = em.sqlContext.createNamedQuery('liquidationreport:getRCDCollectionSummary').setParameters(params ).resultList
		liquidation.remittedforms = em.sqlContext.createNamedQuery('liquidationreport:getRCDRemittedForms').setParameters(params ).resultList
		liquidation.otherpayments = em.sqlContext.createNamedQuery('liquidationreport:getRCDOtherPayments').setParameters(params ).resultList

		//not yet implemented : waiting for sir elmo's db structure 
		liquidation.nonserialremittances = []
		liquidation.nonserialsummary = []
		liquidation.amountinwords = numSvc.doubleToWords( liquidation.amount )
		return liquidation;
	}

	@ProxyMethod 
	def getFundlist( liquidationid ) {
		def list = em.sqlContext.createNamedQuery('liquidationreport:getLiquidationFundlist')
				.setParameter('liquidationid', liquidationid)
				.resultList 
		return list

	}

	@ProxyMethod 
	def getReportByFund( params ) {
		def data  = em.sqlContext.createNamedQuery('liquidationreport:getLiquidationInfo').setParameters(params ).singleResult
		data.list = em.sqlContext.createNamedQuery("liquidationreport:getRCDRemittances").setParameters(params).resultList;	
		
		def fundTotal = data.list.amount.sum()
		if( ! fundTotal ) fundTotal = 0.0 
		
		data.amountinwords 	= numSvc.doubleToWords( fundTotal  ).toUpperCase() + ' PESOS' 
		data.amountformatted	= decformat.format( fundTotal )
							
		return data;

	}

	

}