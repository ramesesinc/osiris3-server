import com.rameses.annotations.*
import com.rameses.common.*
import java.rmi.server.UID;
import com.rameses.util.*;
import com.rameses.io.*;
import com.rameses.services.extended.*;


class UsergroupService extends AbstractCrudListService {

	@PersistenceContext("admin")
	def	em; 

	@Env
	def env;

	String schemaName = "usergroup";
	String subSchemaName = "member";
	
	@ProxyMethod
	public def getNodes( def o ) {
		o.userid = env.USERID;
		println 'Usergroup_getNodes-> ' + o;
		def sql = "usergroup:" + ( (o.root) ? "getRootNodes" : "getChildNodes");
		def list = em.sqlContext.createNamedQuery(sql).setParameters(o).resultList;		
		list.each { 
			if (o.root) it.folder = true;
			if (it.filetype == 'usergroup-folder') {
				it.children = [[filetype:'usergroup']];
			}
		}
		return list;
	}
	
	
	/*****
	* display the member columns
	***/
	@ProxyMethod
	public def getColumns( def o ) {
		o.userid = env.USERID;
		return[
			[name:'user.username', caption:'User Name' ],
			[name:'user.lastname', caption:'Last Name' ],
			[name:'user.firstname', caption:'First Name' ],
			[name:'org.name', caption:'Org' ],
			[name:'securitygroup', caption:'Security Group' ],
		];
	}
	
	public void beforeList( def o ) {	
		o.userid = env.USERID;
	}

	
	@ProxyMethod 
	public void updatePermission(def params) {
		if (!params.objid) throw new Exception('Please specify objid'); 

		def info = em.read('usergroup:member', params);  
		if (!info) throw new Exception("'"+params.objid+"' usergroup member record not found"); 
		
		info.exclude = params.exclude; 
		em.update('usergroup:member', info); 
	}
}


